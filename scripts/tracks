#!/bin/bash
# Title: tracks
# Description: tracks is a front-end interface that allows users to easily query the artemis database for specific log data.
# Version: 1.00.00
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Author: Andrew Withers (atw127@psu.edu, atw31337@gmail.com)

source /opt/artemis/parsOpts.sh

usage ()
{
cat <<EOF

Tracks - Artemis log interface
Usage: tracks [Time OPTION]...[Query OPTION]
If no Time option is selected or if it is placed after the Query option, the time period will default to the last 24 hours

	Time Period Options:
		-D <YYYY-MM-HH>		Specific date
		-M <YYYY-MM>		Specific month
		-Y <YYYY>		Specific year
		-H <HH>			Specific hour of current day
		-d <n>			Last n number of days
		-w <n>			Last n number of weeks
		-m <n>			Last n number of months
		-y <n>			Last n number of years
		-r <n>			Last n number of hours
		-i <n>			Last n number of minutes
		-R <Start> <End>	Specific start and end Date/Time in YYYY-MM-DD HH:MM:SS format
		-a			all

	Query options:
		-F <SHA256 Hash>		Query file(s) by hash
		-S <Source IP>			Query file(s) by source IP address
		-T <Destination IP>		Query file(s) by destination IP address
		-I <Source or Destination IP>	Query files(s) by Source or Destination IP address
		-f <Filename>			Query file by filename

	Additional option:
		-p				Purge all log data

EOF
}

# Got r00t?
if [[ $(id -u) -ne 0 ]]; then
	echo "Root privilege required. Try using sudo"
	exit 0
fi

# Set default time period (Previous 24 hours)
END=$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT SYSDATE();")
START=$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT SUBDATE('$END', 1);")

while [[ $OPTIND -lt $# ]]; do
	parsOpts "$@" "h,help,D:,M:,Y:,H:,d:,w:,m:,y:,r:,i:,R:4,a,p,F:,S:,T:,I:,f:"
	case $OPT in
	h)
		usage
		exit 0
		;;
	help)
		usage
                exit 0
                ;;
	D)
		START="$OPTARG 00:00:01"
		END="$OPTARG 23:59:59"
		;;
	M)
		START="$OPTARG-01 00:00:01"
		END="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_ADD('$START', INTERVAL 1 MONTH);")"
		;;
	Y)
		START="$OPTARG-01-01 00:00:01"
		END="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_ADD('$START', INTERVAL 1 YEAR);")"
		;;
	H)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT CURDATE();") $OPTARG:00:01"
		END="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT CURDATE();") $OPTARG:59:59"
		;;
	d)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT SUBDATE('$END', $OPTARG);")"
		;;
	w)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_SUB('$END', INTERVAL $OPTARG WEEK);")"
		;;
	m)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_SUB('$END', INTERVAL $OPTARG MONTH);")"
		;;
	y)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_SUB('$END', INTERVAL $OPTARG YEAR);")"
		;;
	r)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_SUB('$END', INTERVAL $OPTARG HOUR);")"
		;;
	i)
		START="$(mysql --defaults-file=/etc/mysql/debian.cnf -BN -e "SELECT DATE_SUB('$END', INTERVAL $OPTARG MINUTE);")"
		;;
	R)
		START=$(echo "$OPTARG" | awk '{print $1" "$2}')
		END=$(echo "$OPTARG" | awk '{print $3" "$4}')
		;;
	a)
		ALL=1
		;;
	p)
                		echo
                		read -p 'Are you sure you want to delete all statistical data? This operation is irreversible. [y/N]: ' ANSWER
                		if [[ $ANSWER == 'y' ]] || [[ $ANSWER == 'Y' ]]; then
                        	mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "TRUNCATE TABLE Logs;"
                        	echo "vStat: All log data has been purged"
                fi
                exit 0
                ;;
         F)
                if [[ $ALL -eq 1 ]]; then
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Source, Destination FROM Logs WHERE Hash='$OPTARG';"
                        exit 0
                else
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Source, Destination FROM Logs WHERE (DateTime BETWEEN '$START' AND '$END') AND Hash='$OPTARG';"
                        exit 0
                fi
                ;;
        S)
                if [[ $ALL -eq 1 ]]; then
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Destination FROM Logs WHERE Source='$OPTARG';"
                        exit 0
                else
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Destination FROM Logs WHERE (DateTime BETWEEN '$START' AND '$END') AND Source='$OPTARG';"
                        exit 0
                fi
                ;;
        T)
                if [[ $ALL -eq 1 ]]; then
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Source FROM Logs WHERE Destination='$OPTARG';"
                        exit 0
                else
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Source FROM Logs WHERE (DateTime BETWEEN '$START' AND '$END') AND Destination='$OPTARG';"
                        exit 0
                fi
                ;;
        I)
                if [[ $ALL -eq 1 ]]; then
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Source, Destination FROM Logs WHERE (Source='$OPTARG' OR Destination='$OPTARG');"
                        exit 0
                else
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileName, FileSize, ScanTime, QTime, \
                        FileType, Source, Destination FROM Logs WHERE (DateTime BETWEEN '$START' AND '$END') AND (Source='$OPTARG' OR Destination='$OPTARG');"
                        exit 0
                fi
                ;;
        f)
                if [[ $ALL -eq 1 ]]; then
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileSize, ScanTime, QTime, FileType, \
                        Source, Destination FROM Logs WHERE FileName='$OPTARG';"
                        exit 0
                else
                        echo
                        mysql --defaults-file=/etc/mysql/debian.cnf -D artemis -e "SELECT DateTime, Hash, Scanned, Queued, Result, FileSize, ScanTime, QTime, FileType, \
                        Source, Destination FROM Logs WHERE (DateTime BETWEEN '$START' AND '$END') AND FileName='$OPTARG';"
                        exit 0
                fi
                ;;
        \?)
                echo "Invalid option: $OPTARG"
                exit 1
                ;;
        :)
                echo "Invalid number of arguments for option $OPTARG. $OPTARG requires $NUMARGS argument(s)."
                exit 1
                ;;
	esac

done

